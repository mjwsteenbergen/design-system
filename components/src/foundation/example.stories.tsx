import type { Meta, StoryObj } from '@storybook/react';

// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction
const meta = {
  title: 'Foundation/example',
} satisfies Meta;

export default meta;
type Story = StoryObj<typeof meta>;

// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
export const Colors: Story = {
  render: () => {
    return <div className='w-full p-20'><div className="article"><p className="back-to-main">By Martijn Steenbergen</p>
      <h1>The architecture of my life</h1><div id="tableofcontents-wrapper"><h2><a id="tableofcontents-toggle" href="#tableofcontents">Table of Contents</a></h2><ul id="tableofcontents"><li className="h2"><a href="#introduction">Introduction</a></li><li className="h2"><a href="#the-foundation">The foundation</a></li><ul><li className="h2"><a href="#an-action">An Action</a></li><li className="h2"><a href="#interface">Interface</a></li><li className="h2"><a href="#exceptions">Exceptions</a></li></ul><li className="h2"><a href="#actions">Actions</a></li><ul><li className="h2"><a href="#spotify">Spotify</a></li><ul><li className="h3"><a href="#sort-by-loudness">Sort by Loudness</a></li><li className="h3"><a href="#personally-generated-playlists">Personally generated playlists</a></li><li className="h3"><a href="#last-4-weeks">Last 4 weeks</a></li><li className="h3"><a href="#random-songs">Random Songs</a></li><li className="h3"><a href="#full-release-radar">Full Release Radar</a></li></ul><li className="h2"><a href="#todoist">Todoist</a></li><ul><li className="h3"><a href="#temporary-projects">Temporary Projects</a></li><li className="h3"><a href="#github-synchronisation">GitHub Synchronisation</a></li><li className="h3"><a href="#today-action">Today action</a></li></ul><li className="h2"><a href="#microsoft-email-calendar-teams-">Microsoft (Email, Calendar &amp; Teams) </a></li><ul><li className="h3"><a href="#event-location">Event Location</a></li><li className="h3"><a href="#birthday-reminder">Birthday Reminder</a></li><li className="h3"><a href="#archive-read">Archive Read</a></li><li className="h3"><a href="#got-invitations">GOT invitations</a></li></ul><li className="h2"><a href="#lights">Lights</a></li><ul><li className="h3"><a href="#moods">Moods</a></li><li className="h3"><a href="#party-mode">Party mode</a></li></ul><li className="h2"><a href="#notion">Notion</a></li><ul><li className="h3"><a href="#recipes">Recipes</a></li><li className="h3"><a href="#links">Links</a></li></ul></ul><li className="h2"><a href="#other-software-i-made">Other software I made</a></li><ul><li className="h2"><a href="#startpage">Startpage</a></li><li className="h2"><a href="#daily-todo">Daily Todo</a></li><li className="h2"><a href="#lnk-nntn-nl">lnk.nntn.nl</a></li><li className="h2"><a href="#events-website">Events website</a></li><li className="h2"><a href="#this-blog">This blog</a></li><li className="h2"><a href="#wallsetter">Wallsetter</a></li><li className="h2"><a href="#playlister">Playlister</a></li></ul></ul></div><article><figure><img src="https://miro.medium.com/max/606/0*BaxS_a-8UWDxksDx" alt="From&nbsp;XKCD" /><figcaption>From&nbsp;<a href="https://xkcd.com/1319/" target="blank">XKCD</a></figcaption></figure>
      <p>This is an updated version of the 2019 post, architecture of my life, which you can find <a href="https://blog.nntn.nl/architecture-of-my-life" target="blank">here</a>.</p>
      <h2 id="introduction">Introduction</h2>
      <p>Automation is something dear to my heart. Like the figure at the top of this post, I am not sure that in the end it will have actually saved me time, but it has given me many opportunities to learn, as trying to build a resilient piece of software with a beautiful architecture, which helps me be more productive is an ever-evolving project, which will keep pushing me to learn more. I hope with this I can inspire you to automate some part of your life.</p>
      <p>In this blogpost I will describe the following things:</p>
      <ul><li><b><a href="#the-foundation">The foundation</a></b>:
        The code my automation is built upon. It will also explain the fundamental ideas behind how I think about automation.</li>
        <li><b><a href="#actions">Actions</a></b><b>:</b>
          An overview of some of the automation I have built. If you're looking for some inspiration to build something yourself, this is the place to go.</li>
        <li><b><a href="#other-software-i-made">Other software</a></b><b>:</b>
          Not everything I built can be run inside the framework I built. I also built some other cool utilities to help me in my every day life.</li></ul>
      <h2 id="the-foundation">The foundation</h2>
      <p>The core and foundation of my automation is named Atlas. Atlas handles everything to run my automation, from connecting to services to handling errors.</p>
      <h2 id="an-action">An Action</h2>
      <p>At the core of Atlas is a simple idea: Actions. Anything I might ever want to automate is an action. It will act on my behalf on the online services that I use. Some actions will check for themselves if they need to run (adding a reminder for a sent email). The action can also decide how often it wants to run, from every 15 minutes to once a week. Others I only want to run when I need them to (checking the uptime of my systems). </p>
      <p>Some require input to do their job correctly (adding a todo to my todo list). The most complicated actions have some state, as the input they require is more complicated. </p>
      <p>To build this state I use a chatbot interface, where I give a command, the system parses my input, updates the state and performs the next step, incrementally building the state until all the necessary properties for the action to complete are in place. This flow is explained in the figure below</p>
      <figure><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/4c8fca8e-34ca-4d28-aae0-8739d858799a/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&amp;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230524%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20230524T210610Z&amp;X-Amz-Expires=3600&amp;X-Amz-Signature=851004f10e0d1bb2193acd218bbec890925d03b0e2a6b696d014931831673c27&amp;X-Amz-SignedHeaders=host&amp;x-id=GetObject" alt="Overview of the state" /><figcaption>Overview of the state</figcaption></figure>
      <p>For example, when I want to add a task to a specific task list, I first write the content of that task, which is added to the state. It replies asking which project I want it to add to with some example task lists. I reply with "Write a blog". In the "Update State" part of the flow, this title of a task list is then internally converted to the internal id of the list. This way, me and anyone else using the system do not need to know the exact internals.</p>
      <h2 id="interface">Interface</h2>
      <p>Atlas is always part of another project. It is wrapped in Ares, a project that connects Atlas and the Microsoft Bot Framework to make it available as a chatbot, in my case as a Telegram chatbot, where you can ask it to perform the actions. It is also run as an Azure Function, available as a <a href="https://zeus-laurentia.azurewebsites.net/api/run/help" target="blank">web-api</a>. I have used this API to build an iOS shortcut to run Actions from my phone and watch and have created a windows application such that I can run any action from my laptop. The Azure Function also runs on a timer trigger and executes every 15 minutes to execute the relevant actions. </p>
      <p></p>
      <figure><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/f3b1e86d-a29f-42cd-a80c-2919f668ba32/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&amp;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230524%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20230524T210610Z&amp;X-Amz-Expires=3600&amp;X-Amz-Signature=768e7c6c3963e0ef6a313cdf6cbe97105f6f1dded8dcc8c712ee25081ac0b3a6&amp;X-Amz-SignedHeaders=host&amp;x-id=GetObject" alt="Telegram chat interface" /><figcaption>Telegram chat interface</figcaption></figure>
      <p></p>
      <div className="column-parent"><div className="column"><figure><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/019bdf2e-4c50-44e3-953f-f66495477b95/20210106_113443937_iOS.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&amp;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230524%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20230524T210615Z&amp;X-Amz-Expires=3600&amp;X-Amz-Signature=67d08fa8cb5c004f3742e500d497a74b822f6f7e9c55908c985a610ec5c0d1b8&amp;X-Amz-SignedHeaders=host&amp;x-id=GetObject" alt="Apple Watch Interface with Atlas" /><figcaption>Apple Watch Interface with Atlas</figcaption></figure></div>
        <div className="column"><figure><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/2ae6b394-8577-4800-bafd-cbbc67d488f4/20210106_113518000_iOS.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&amp;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230524%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20230524T210615Z&amp;X-Amz-Expires=3600&amp;X-Amz-Signature=570d0c773c36e860819ebb7f7c5f0b1d1d40e52b45792795fffb0db0d5a5c11f&amp;X-Amz-SignedHeaders=host&amp;x-id=GetObject" alt="IPhone interface with Atlas" /><figcaption>IPhone interface with Atlas</figcaption></figure></div></div>
      <p></p>
      <p></p>
      <div className="column-parent"><div className="column"><figure><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/0b5c6a6b-38f8-4ae1-9f2f-7ffc98a54f32/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&amp;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230524%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20230524T210616Z&amp;X-Amz-Expires=3600&amp;X-Amz-Signature=1b364fa6fcf2b4175f4cf8657bdf9099656fbf4ddaac8a6f072ea478a0e1e459&amp;X-Amz-SignedHeaders=host&amp;x-id=GetObject" alt="Run actions from the search menu" /><figcaption>Run actions from the search menu</figcaption></figure></div>
        <div className="column"><figure><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/81e811b2-a16c-4882-a322-56bf59b96403/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&amp;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230524%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20230524T210616Z&amp;X-Amz-Expires=3600&amp;X-Amz-Signature=71fc9efce3f2248b413be69028e899d9b73b9c7ae6701229a4cd57c615e720b5&amp;X-Amz-SignedHeaders=host&amp;x-id=GetObject" alt="The interface on windows" /><figcaption>The interface on windows</figcaption></figure></div></div>
      <h2 id="exceptions">Exceptions</h2>
      <p>One of the problems of building your own automation is that things are breaking. Constantly. I am connecting to 17 online services and having 35.000+ lines of code means that it is likely something will break. Most of the errors occur within Actions, as they make the calls to external services and change (and therefore break) most often. To make sure one action does not break the entire system, the actions are run in a try-catch block. </p>
      <p>Once an action crashes, automation will start running to handle the crash. Independently running actions will start to send me messages to tell me that it is broken after four failed runs, so that timeouts and other temporary problems don’t bother me. It will also automatically throttle itself, postponing its next run in an exponential way, to make sure it does not break anything and I do not get spammed with messages. </p>
      <p>After 10 crashes, my automation will automatically create a GitHub issue with the name of the action that crashes and the stack trace. It will even try to generate a url to line in the code in GitHub link where it believes the issue is originating.</p>
      <p>The Telegram chatbot will ask the user after a single crash if it wants to make a GitHub issue, as this is deemed more important.</p>
      <p>Now, you have a good overview of the basics, we can discuss the cool parts.</p>
      <h2 id="actions">Actions</h2>
      <h2 id="spotify">Spotify</h2>
      <p>I like to listen to a lot of music. Last year, I spent 98.960 minutes listening to <a href="https://spotify.com/" target="blank">Spotify</a>, one of the most  popular streaming services out there. To help me get the most out of their service, I have a lot of automation running to help me. </p>
      <h3 id="sort-by-loudness">Sort by Loudness</h3>
      <p>To aid you in finding new music, Spotify presents you with two auto-generated personalized playlists. A&nbsp;<a href="https://support.spotify.com/us/using_spotify/playlists/discover-weekly/" target="blank">Discover Weekly</a>&nbsp;playlist with new music from new artists and a&nbsp;<a href="https://support.spotify.com/us/using_spotify/playlists/release-radar/" target="blank">Release Radar</a>&nbsp;playlist which contains music released this week. Both are very nice, but have one problem, they jump from very loud energetic to peaceful piano music. This is very jarring if you are listening. To solve this, I download all songs from the playlist and get the features of the songs. <a href="https://developer.spotify.com/documentation/web-api/reference/tracks/get-audio-features/#audio-features-object" target="blank">These features are provided by Spotify</a> and contain things like energy, danceability, liveness and loudness. I order all songs by loudness and put them in a new playlist for me. This way I can listen to my music from very loud to very peaceful.</p>
      <h3 id="personally-generated-playlists">Personally generated playlists</h3>
      <p>Once you have features of songs, you can think bigger. Spotify can extract features from all of my saved music. From that you can generate playlists. However to do that, you would need to find the perfect settings to create a nice playlist. For this I created a windows application called Playlister, explained further below. Using Playlister, I have created playlists named Summer, Winter, Piano and Energy. Every week, Atlas downloads all my saved songs from Spotify and runs it through each of the finely tuned filters for my playlists and updates each with new songs I’ve added and removes songs I no longer like. So if I want to listen to music that gets me hyped, I listen to the Energy playlist, which consists of songs I like that, following my tweaks, can be considered full of energy.</p>
      <h3 id="last-4-weeks">Last 4 weeks</h3>
      <p>I (used to) spend a lot of time biking and travelling by train. I have a data plan, but don't want to overshoot it. This leads to the fact that I need Spotify to download a lot of music. However, I also have a lot of new music that I want to bring with me. I could download all my music, but my phone does not have enough storage for that. To solve this problem, Atlas will update a playlist every night with all of the songs I added in the last 4 weeks. I then tell Spotify to keep this playlist downloaded at all times. This leads to an almost always updated playlist with my newest songs.</p>
      <h3 id="random-songs">Random Songs</h3>
      <p>In the previous paragraph I explained that I can’t download every songs to my phone. However, I might want to listen to a random selection of music every once in a while. Music not in one of my automatically generated playlist or in any other list. Furthermore, even if I have internet, I sometimes feel like the shuffle is not completely random. And lastly, it is also sorted by loudness and if I need to concentrate, I can start at loud and end at calm music. To solve these problems, every night Atlas takes all my saved music, picks 50 random songs and adds it to a playlist sorted by loudness, so I can always listen to some random music I like.</p>
      <h3 id="full-release-radar">Full Release Radar</h3>
      <p>Spotify has a feature called Release Radar, where each week, you can listen to music that came out that week from artists you follow or might find interesting. This is great and I’ve gotten a lot of new music from it, however it might miss artists that I like and if an artist released an entire album, it will only display one song in the playlist, which I can definitely understand, but I don’t want. So I created an Action on Atlas, which every Friday checks all the artists I follow. If they released any new music in the last week and it puts the songs into a playlist called “Full release radar”, so that I do have this overview.
        As an addition, another action checks if I added music from a new artist and automatically follows them, so this list is constantly expanding.</p>
      <h2 id="todoist">Todoist</h2>
      <p>Task lists are must for me. I forget a lot of things and task lists enable me to keep track of all the things I need to do. To help me I use <a href="https://todoist.com/" target="blank">Todoist</a>.</p>
      <h3 id="temporary-projects">Temporary Projects</h3>
      <p>As some might know, every Friday, I try to clean my room. This is very nice, as during the week I don’t have to think about keeping everything clean, as on Friday I will clean it anyways, nor do I have to force it in sometime during the week. Cleaning is something that I have to go through often and has a predetermined list of tasks. Although I try to do it on Friday, it might occur that it happens on another day. To be able to start with all of these tasks on the fly I have an Action which can import a template at any time. The template is written in&nbsp;<a href="https://www.taskpaper.com/" target="blank">TaskPaper</a>, a simplistic way of writing down tasks, to create all projects and tasks. These configuration files are stored in my OneDrive, so I can edit, delete or add any new list at any time or any place.</p>
      <h3 id="github-synchronisation">GitHub Synchronisation</h3>
      <p>On <a href="https://github.com/" target="blank">GitHub</a>, I currently have 7 repositories where I have issues open that I plan on fixing one day. To keep track of this in one place, I synchronize them to Todoist, where I can see them in a separate project. This is only one way, as I neither want to create issues in Todoist, not be able to complete them. </p>
      <h3 id="today-action">Today action</h3>
      <p>When doing work from my task list, there are two main categories this work can be divided into: work that needs to be done today and work that you plan on doing today. The first is easily managed in Todoist by due dates. The second is managed by myself with a label @today. Any task with that label and a due date of today is then shown to me and I will work on that on the day. To help me manage this planned work, I have some automation running. Every night an Action runs, which:</p>
      <ul><li>Moves all tasks with the label @today to @yesterday</li>
        <li>Moves all tasks with the label @tomorrow to @today</li>
        <li>Updates all tasks with due date today and the label @planned to remove that due date and adds label @yesterday</li></ul>
      <p>This makes sure that when I wake up, I know exactly what I need to do on a day. </p>
      <h2 id="microsoft-email-calendar-teams-">Microsoft (Email, Calendar &amp; Teams) </h2>
      <p>All of my friends know that I send a calendar invite for every dinner/meeting/meetup I have. I have found that this enables everyone to have the same basic truth and then there can be no doubt when a meeting event is. So I make a lot of them and use automation to make it easier. </p>
      <h3 id="event-location">Event Location</h3>
      <p>In Outlook, you can also store where a person lives. When I have a meeting at a friends place and their address is in my system, I only have to write the name of the person in the location field of the event and Atlas will add the exact address of that person. During these lockdown times, meetings are now online. If I put “Teams” as the location in the calendar event, it will create a new teams meeting for me and add the link in the calendar event.</p>
      <h3 id="birthday-reminder">Birthday Reminder</h3>
      <p>Just like every other person on this planet, I am terrible at remembering birthdays. To make sure I don’t forget to buy presents, I get a reminder a week ahead of a persons birthday and then on the day itself to make sure to wish them a happy birthday.</p>
      <h3 id="archive-read">Archive Read</h3>
      <p>I use&nbsp;<a href="https://www.howtogeek.com/413507/what-is-inbox-zero-and-how-can-you-achieve-it/" target="blank">inbox zero</a>&nbsp;which results me moving email which I completed or are no longer relevant to an archive folder. To remove this small OCD thing that there might be unread email in that folder, it just marks everything in that folder as read.</p>
      <h3 id="got-invitations">GOT invitations</h3>
      <p>Since the second year I have been studying in Delft, every Thursday me and a group of friends have met up to eat together. Since that time, every week I have sent an invite with the date and who is supposed to be hosting that week. As making that invite every week is a bit annoying and I sometimes very awkwardly would forget someone or use the wrong email address, I made this an Action I can trigger to fill in the location and title and it will handle the rest. </p>
      <h2 id="lights">Lights</h2>
      <p>Recently, I got some smart lights as a present. I now have 5 dimmable lights and 1 light which can change color. Obviously I automate this.</p>
      <h3 id="moods">Moods</h3>
      <p>Changing the lights in your room based on your needs is very nice. To do this I implemented the concept of moods. During the day all lights are at full strength and illuminate my room as possible as I like a bright environment to work. When I enter a meeting, I have a mood which tries to maximize the lighting so I look as good as possible on a video call. When it becomes night, it dims the lights, so I get a bit sleepy. Finally it has an off mood, for when I'm not there or asleep.</p>
      <h3 id="party-mode">Party mode</h3>
      <p>From the section about Spotify, we learned you can extract features from songs. What’s more is that you can also extract the beats of a given song. This means that you can get the tempo of a song. With Spotify, we can also see which song is playing and where we are in the song. Next, by contacting the smart bulbs, we can toggle the lights on the beat of a song. The lights change light level, one by one, so it looks like it is going from right to left on the beat of the music. It is amazing to experience and very fun to show off to visitors of your room.</p>
      <figure><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/a9ad58bf-b116-48df-9547-148d9c38c48c/ezgif-6-9ff0f7344a18.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&amp;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230524%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20230524T210610Z&amp;X-Amz-Expires=3600&amp;X-Amz-Signature=9381fe2078e7fd9430d5dd0b00205ebb9d6d6572c9b9b813bed349e7228e8b2d&amp;X-Amz-SignedHeaders=host&amp;x-id=GetObject" alt="" /><figcaption></figcaption></figure>
      <p></p>
      <h2 id="notion">Notion</h2>
      <p><a href="http://notion.so" target="blank">Notion</a> is starting to become my knowledge base for everything. It contains my blogposts, recipes, notes and serves as my <a href="https://zettelkasten.de/posts/overview/" target="blank">Zettelkasten</a> (at least I try to). To help me keep things organized, I have some automation running. As connecting to Notion has proven difficult I have reversed engineered their code to be able to interact with this service.</p>
      <h3 id="recipes">Recipes</h3>
      <p>In Notion, I have a list of all the recipes I want. As having them in one single website, disables you from having recipes from multiple sources, having them in Notion is the best other option. Using my automation, I am able to import a new recipe in a few seconds.</p>
      <h3 id="links">Links</h3>
      <p>I am trying to create a useful knowledge base of all the things I consume. As I'm getting older, I am realizing that things I read and listened to years ago seem new to me again and I want to retain some of the knowledge and wisdom I learned from articles and podcasts, so that I am able to use them at a later point. Therefore I have started collecting them in Notion and am using some automation to template some things away for me.</p>
      <h2 id="other-software-i-made">Other software I made</h2>
      <h2 id="startpage">Startpage</h2>
      <p><a href="https://github.com/mjwsteenbergen/startpage" target="blank">View the code</a></p>
      <figure><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/b06d3e8c-74dd-4ce2-b378-bf4c1351e74a/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&amp;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230524%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20230524T210610Z&amp;X-Amz-Expires=3600&amp;X-Amz-Signature=48d9f4e06e68be03a1667985bd53ac7b346d28079960f4bf3679591d1c9e33de&amp;X-Amz-SignedHeaders=host&amp;x-id=GetObject" alt="" /><figcaption></figcaption></figure>
      <p>As you might have read in the <a href="#today-action">Todoist section</a>, I have a list of tasks that I want to complete every day. To keep me focused on these tasks, I have created a startpage for myself. It is very minimalistic and features automatic dark mode. When I open a new page, I can also complete a task. Once all tasks are completed, it loads a random image from <a href="https://unsplash.com/" target="blank">Unsplash</a> as background. </p>
      <h2 id="daily-todo">Daily Todo</h2>
      <figure><img src="https://miro.medium.com/max/2880/0*xHW6TidC0srJ4dnZ" alt="A view of the app with a list of todos (left) and projects (right). The top textbox allows me to search for todo’s by label, project or content" /><figcaption>A view of the app with a list of todos (left) and projects (right). The top textbox allows me to search for todo’s by label, project or content</figcaption></figure>
      <p>To help decide which tasks I want to do today, I created an universal windows app called DailyTodo. I can search for any task, filter by project or label. Once I have picked the task, it will add the @today label to it. This tells my system that I want to do this task today. It will then also make a notification in my windows action center and forces it to stay at the top. So if at any point of the day I wonder what I should do, I can simply open it and quickly pick my next task. As you can also see in the images below, with these notifications I can also quickly complete or remove them from my day.</p>
      <figure><img src="https://miro.medium.com/max/887/0*OJ6KzIkaxD6DGA4N" alt="All tasks with the label @Today will be displayed in my action center" /><figcaption>All tasks with the label @Today will be displayed in my action center</figcaption></figure>
      <h2 id="lnk-nntn-nl">lnk.nntn.nl</h2>
      <p>Remembering links can be difficult. When creating a Microsoft teams link, it might not even come across as a valid link for some software. To help you can use a link shortener. There exist a lot of link shorteners already, but I like to be in charge of any personal links that I have. Therefore I created <a href="http://lnk.nntn.nl" target="blank">lnk.nntn.nl</a>. As an example, take a look at my <a href="https://lnk.nntn.nl/cv" target="blank">CV</a>.</p>
      <h2 id="events-website">Events website</h2>
      <figure><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/f1a090fe-400a-4d67-a8d6-6c349d1d375d/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&amp;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230524%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20230524T210610Z&amp;X-Amz-Expires=3600&amp;X-Amz-Signature=88fcbf1c20359eb263be352a37a724ef78d9f853b7108b32c0ea2fda3ad5530c&amp;X-Amz-SignedHeaders=host&amp;x-id=GetObject" alt="" /><figcaption></figcaption></figure>
      <p>As written in the <a href="#microsoft-email-calendar-teams-">Microsoft</a> section, I have a lot of calendar invites. However, sometimes you might want to create an event, where you are not sure yet who wants to show up. To help me fix that problem, I created a website where I can have people sign up for any event that is in my calendar. You write down your email and it will send you the calendar invite. If this is your first time using it, it will ask me to verify your email, so that you cannot spam random people. </p>
      <h2 id="this-blog">This blog</h2>
      <p><a href="https://github.com/mjwsteenbergen/mjwsteenbergen.blog" target="blank">View the code</a></p>
      <p>Yes, you read this right. This blog is part of my automation. Using <a href="#notion">Notion</a>, I am able to write any blog post that I want. Using Atlas, I extract the text from Notion and convert it to html to display on the blog you are reading right now!</p>
      <h2 id="wallsetter">Wallsetter</h2>
      <p>One of the more cute examples of my own code is&nbsp;<a href="https://install.appcenter.ms/users/mjwsteenbergen/apps/wallsetter/distribution_groups/releases" target="blank">Wallsetter</a>. This is a small app which I built to set a new lock screen and wallpaper every two hours. It gets new images from&nbsp;<a href="https://unsplash.com/" target="blank">Unsplash</a>, an amazing website to find free to use images. Wallsetter is then able to apply all sorts of effects to it.</p>
      <figure><img src="https://miro.medium.com/max/3900/0*y4imYHPRg9lapsBp" alt="The settings menu for my app Wallsetter" /><figcaption>The settings menu for my app Wallsetter</figcaption></figure>
      <p>The cool thing is that for the lock screen is that it is able to check my Trakt and look at which TV show airs today or if there are any shows from yesterday that I have not watched yet. Then it will grab an image of that show and set it as my lock screen or wallpaper.</p>
      <p>However, that is not my setup currently I use it to download an image of a cute dog, set it as my wallpaper and set a black and white version of that as my lock screen image. It is gorgeous and I am very happy with it.</p>
      <h2 id="playlister">Playlister</h2>
      <p>Spotify can extract features from all of my saved music. From that you can generate playlists, as we have seen before. However to do that, you would need to find the perfect settings to create a nice playlist. To do this, I created&nbsp;<a href="https://install.appcenter.ms/users/mjwsteenbergen/apps/playlister/distribution_groups/releases" target="blank">Playlister</a>, a universal Windows app, which enables me to play with all the features you see on the right of the image below.</p>
      <figure><img src="https://miro.medium.com/max/1827/0*lP1Eei7Uza5Al7jc" alt="A screenshot of the Playlister app with right the filters that can be applied" /><figcaption>A screenshot of the Playlister app with right the filters that can be applied</figcaption></figure>
      <p></p></article></div></div>
  }
};

